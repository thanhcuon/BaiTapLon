@model BaiTapLon.Context.Document

@{
	ViewBag.Title = "Create";
}
<div class="content-wrapper">
	<div class="content">
		<div class="container-fluid">
			<div class="row">
				<h2>Create</h2>

				@using (Html.BeginForm("Create", "DocumentAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
				{
					@Html.AntiForgeryToken()

				<div class="form-horizontal">
					<h4>Document</h4>
					<hr />
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					<div class="form-group">
						@Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.strong, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.strong, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.strong, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.filepath, htmlAttributes: new { @class = "control-label" })
						<p>Chỉ thêm file pdf</p>
						<input type="file" name="filename" class="form-control-file" />
					</div>

					<div class="form-group ">
						@Html.LabelFor(model => model.category_id)
						<select name="category_id" class="form-control">
							<option value="">-- Select Category --</option>
							@Html.Raw(ViewBag.CategoryOptions)
						</select>
						@Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.nguoi_gui, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.nguoi_gui, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.nguoi_gui, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.tac_gia, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.tac_gia, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.tac_gia, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.versions, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.versions, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.versions, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.ban_quyen, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.ban_quyen, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.ban_quyen, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
							@Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" value="Create" class="btn btn-default" />
						</div>
					</div>
				</div>
				}

				<div>
					@Html.ActionLink("Back to List", "Index")
				</div>
			</div>
		</div>
	</div>
</div>